#set GOOGLE_APPLICATION_CREDENTIALS=C:\Users\xxx-8ff26151e4d6.json
import uuid
import pandas as pd

from google.cloud.dialogflowcx_v3.services.agents import AgentsClient
from google.cloud.dialogflowcx_v3.services.sessions import SessionsClient
from google.cloud.dialogflowcx_v3.types import session

def run_sample():
    # projects/banking77intents/locations/us-east1/agents/db4e02f9-42b0-47f3-9ef4-1d4531438a8b
    # TODO(developer): Replace these values when running the function
    project_id = "banking77intents"
    # For more information about regionalization see https://cloud.google.com/dialogflow/cx/docs/how/region
    location_id = "us-east1"
    # For more info on agents see https://cloud.google.com/dialogflow/cx/docs/concept/agent
    agent_id = "db4e02f9-42b0-47f3-9ef4-1d4531438a8b"
    agent = f"projects/{project_id}/locations/{location_id}/agents/{agent_id}"
    # For more supported languages see https://cloud.google.com/dialogflow/es/docs/reference/language
    language_code = "en-us"
    
    testFN = "test.csv"
    print("Reading test cases from", testFN)
    tests = pd.read_csv(testFN, encoding="utf-8")
    # add columns for output
    tests["Intent_From_Server"] = ""
    tests["Intent_Score"] = ""
    tests["Pass_Utt"] = ""
    
    for i in range(len(tests)):
        convo = [tests['text'][i]]
        expected = [tests['category'][i]]
        # For more information on sessions see https://cloud.google.com/dialogflow/cx/docs/concept/session
        session_id = uuid.uuid4()
    
        detect_intent_texts(agent, session_id, tests, i, language_code)
        #if i > 5:
        #    break
    tests.to_csv("test_results.csv", index=False)
    print("Wrote test_results.csv")

def detect_intent_texts(agent, session_id, tests, i, language_code):
    """Returns the result of detect intent with texts as inputs.

    Using the same `session_id` between requests allows continuation
    of the conversation."""
    session_path = f"{agent}/sessions/{session_id}"
    #print(f"Session path: {session_path}\n")
    client_options = None
    agent_components = AgentsClient.parse_agent_path(agent)
    location_id = agent_components["location"]
    if location_id != "global":
        api_endpoint = f"{location_id}-dialogflow.googleapis.com:443"
        #print(f"API Endpoint: {api_endpoint}\n")
        client_options = {"api_endpoint": api_endpoint}
    session_client = SessionsClient(client_options=client_options)

    text_input = session.TextInput(text=tests['text'][i])
    query_input = session.QueryInput(text=text_input, language_code=language_code)
    request = session.DetectIntentRequest(
        session=session_path, query_input=query_input
    )
    response = session_client.detect_intent(request=request)

    #print("=" * 20)
    print(f"Query text: {response.query_result.text}")
    response_messages = [
        " ".join(msg.text.text) for msg in response.query_result.response_messages
    ]
    #print(f"Response text: {' '.join(response_messages)}\n")
    #print(response.query_result)
    tests["Intent_From_Server"][i] = response.query_result.intent.display_name
    tests["Intent_Score"][i] = response.query_result.intent_detection_confidence
    tests["Pass_Utt"][i] = "False"
    diagnosticinfo = response.query_result.diagnostic_info # has alternative intents and their scores
    if  tests["Intent_From_Server"][i] == tests['category'][i]:
        tests["Pass_Utt"][i] = "True"

run_sample()
